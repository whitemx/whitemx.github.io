<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: How to return an array of complex types in a web service	</title>
	<atom:link href="/2007-1-5-how-to-return-an-array-of-complex-types-in-a-web-service-html/feed/" rel="self" type="application/rss+xml" />
	<link>/2007-1-5-how-to-return-an-array-of-complex-types-in-a-web-service-html/</link>
	<description></description>
	<lastBuildDate>Fri, 26 Aug 2022 15:30:41 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.1</generator>
	<item>
		<title>
		By: Wild Bill		</title>
		<link>/2007-1-5-how-to-return-an-array-of-complex-types-in-a-web-service-html/#comment-1244</link>

		<dc:creator><![CDATA[Wild Bill]]></dc:creator>
		<pubDate>Fri, 05 Jan 2007 14:08:19 +0000</pubDate>
		<guid isPermaLink="false">/2007-1-5-how-to-return-an-array-of-complex-types-in-a-web-service-html/#comment-1244</guid>

					<description><![CDATA[&lt;p&gt;Umm. I use a slightly simpler method:&lt;/p&gt;&lt;p&gt;class returnClass&lt;br/&gt;   public myArray() as whatever...&lt;br/&gt;   sub new() &lt;br/&gt;   end sub&lt;br/&gt;end class&lt;/p&gt;&lt;p&gt;class actualWebService&lt;br/&gt;    public function returnAnArray() as returnClass&lt;br/&gt;      &#039; create a new instance of return class here&lt;br/&gt;       set returnAnArray = myNewInstanceOfReturnClass&lt;br/&gt;    end function&lt;br/&gt;end class&lt;/p&gt;&lt;p&gt;I&#039;m a simple soul me.&lt;/p&gt;&lt;p&gt;Nothing to stop you nesting classes - so that you have a complex multi-value class containing other classes, etc..  We use this to pass back our request class, which then contains profile classes, etc, etc.&lt;/p&gt;&lt;p&gt;---* Bill&lt;br/&gt;   &lt;/p&gt;]]></description>
			<content:encoded><![CDATA[<p>Umm. I use a slightly simpler method:</p>
<p>class returnClass<br />   public myArray() as whatever&#8230;<br />   sub new() <br />   end sub<br />end class</p>
<p>class actualWebService<br />    public function returnAnArray() as returnClass<br />      &#8216; create a new instance of return class here<br />       set returnAnArray = myNewInstanceOfReturnClass<br />    end function<br />end class</p>
<p>I&#8217;m a simple soul me.</p>
<p>Nothing to stop you nesting classes &#8211; so that you have a complex multi-value class containing other classes, etc..  We use this to pass back our request class, which then contains profile classes, etc, etc.</p>
<p>&#8212;* Bill   </p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
