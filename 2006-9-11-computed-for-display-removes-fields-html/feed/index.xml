<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Computed For Display removes fields	</title>
	<atom:link href="/2006-9-11-computed-for-display-removes-fields-html/feed/" rel="self" type="application/rss+xml" />
	<link>/2006-9-11-computed-for-display-removes-fields-html/</link>
	<description></description>
	<lastBuildDate>Fri, 26 Aug 2022 15:33:07 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.1</generator>
	<item>
		<title>
		By: Kevin Pettitt		</title>
		<link>/2006-9-11-computed-for-display-removes-fields-html/#comment-1167</link>

		<dc:creator><![CDATA[Kevin Pettitt]]></dc:creator>
		<pubDate>Wed, 13 Sep 2006 23:10:06 +0000</pubDate>
		<guid isPermaLink="false">/2006-9-11-computed-for-display-removes-fields-html/#comment-1167</guid>

					<description><![CDATA[&lt;p&gt;I also remember the rule that existing stored values on the document will trump whatever formula happens to be the CFD at present.  I often make computed fields into CFDs on applications I inherit (where it makes sense), and always run a cleanup agent to remove the old stored values.  I guess I should experiment to see if that is in fact still necessary.&lt;/p&gt;&lt;p&gt;On a related note, I remember one reason that older applications used Computed fields where you&#039;d think a CFD would work just fine. If you have formulas in fieldA dependent on a the value of a (hidden) CFD fieldB, it used to be that the value of fieldB would not be available for the computation.  You HAD to make fieldB computed for the dependent formula in fieldA to work.  Not only that, but I used to have to write cleanup routines that would remove fieldB and its brethren when the doc was closed, in order for those fields to mimic CFD behavior (i.e. always computing afresh when document is opened).  I&#039;ve noticed in more recent releases that the CFD approach works fine without all the kludginess...I think it was fixed in 5, but I didn&#039;t &quot;trust it&quot; so continued the old approach for a while.  I&#039;m comfortable that 6 works.&lt;/p&gt;]]></description>
			<content:encoded><![CDATA[<p>I also remember the rule that existing stored values on the document will trump whatever formula happens to be the CFD at present.  I often make computed fields into CFDs on applications I inherit (where it makes sense), and always run a cleanup agent to remove the old stored values.  I guess I should experiment to see if that is in fact still necessary.</p>
<p>On a related note, I remember one reason that older applications used Computed fields where you&#8217;d think a CFD would work just fine. If you have formulas in fieldA dependent on a the value of a (hidden) CFD fieldB, it used to be that the value of fieldB would not be available for the computation.  You HAD to make fieldB computed for the dependent formula in fieldA to work.  Not only that, but I used to have to write cleanup routines that would remove fieldB and its brethren when the doc was closed, in order for those fields to mimic CFD behavior (i.e. always computing afresh when document is opened).  I&#8217;ve noticed in more recent releases that the CFD approach works fine without all the kludginess&#8230;I think it was fixed in 5, but I didn&#8217;t &#8220;trust it&#8221; so continued the old approach for a while.  I&#8217;m comfortable that 6 works.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Jake White		</title>
		<link>/2006-9-11-computed-for-display-removes-fields-html/#comment-1163</link>

		<dc:creator><![CDATA[Jake White]]></dc:creator>
		<pubDate>Tue, 12 Sep 2006 15:28:20 +0000</pubDate>
		<guid isPermaLink="false">/2006-9-11-computed-for-display-removes-fields-html/#comment-1163</guid>

					<description><![CDATA[&lt;p&gt;Could it be a web-related issue?  If &quot;Generate HTML for all fields&quot; isn&#039;t on, a web edit-save cycle can blow away fields.&lt;/p&gt;]]></description>
			<content:encoded><![CDATA[<p>Could it be a web-related issue?  If &#8220;Generate HTML for all fields&#8221; isn&#8217;t on, a web edit-save cycle can blow away fields.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Don McNally		</title>
		<link>/2006-9-11-computed-for-display-removes-fields-html/#comment-1164</link>

		<dc:creator><![CDATA[Don McNally]]></dc:creator>
		<pubDate>Mon, 11 Sep 2006 12:40:00 +0000</pubDate>
		<guid isPermaLink="false">/2006-9-11-computed-for-display-removes-fields-html/#comment-1164</guid>

					<description><![CDATA[&lt;p&gt;Matt, I think you are exactly right, except I think it happened either going from 4.5x to 5.x or somewhere in the 5.x codestream.  I remember having similar problems in our applications.  We ended up changing the names of the CFD fields.&lt;/p&gt;]]></description>
			<content:encoded><![CDATA[<p>Matt, I think you are exactly right, except I think it happened either going from 4.5x to 5.x or somewhere in the 5.x codestream.  I remember having similar problems in our applications.  We ended up changing the names of the CFD fields.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Matt White		</title>
		<link>/2006-9-11-computed-for-display-removes-fields-html/#comment-1166</link>

		<dc:creator><![CDATA[Matt White]]></dc:creator>
		<pubDate>Mon, 11 Sep 2006 11:59:35 +0000</pubDate>
		<guid isPermaLink="false">/2006-9-11-computed-for-display-removes-fields-html/#comment-1166</guid>

					<description><![CDATA[&lt;p&gt;The field only exists once on the form (as a CFD), but a value has been populated onto the document by an agent. My query is why the CFD field on the form should remove the field on the document when the document is saved through the web.&lt;/p&gt;&lt;p&gt;Matt&lt;/p&gt;]]></description>
			<content:encoded><![CDATA[<p>The field only exists once on the form (as a CFD), but a value has been populated onto the document by an agent. My query is why the CFD field on the form should remove the field on the document when the document is saved through the web.</p>
<p>Matt</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Sean Burgess		</title>
		<link>/2006-9-11-computed-for-display-removes-fields-html/#comment-1165</link>

		<dc:creator><![CDATA[Sean Burgess]]></dc:creator>
		<pubDate>Mon, 11 Sep 2006 11:40:29 +0000</pubDate>
		<guid isPermaLink="false">/2006-9-11-computed-for-display-removes-fields-html/#comment-1165</guid>

					<description><![CDATA[&lt;p&gt;How can you have 2 fields on the same form with the exact same name?  Notes is not going to allow that even is one of the fields is a Computed for Display field.  The only way I can think of it occuring is if they are on 2 different subforms.  In that case, the behaviour you observed is absolutely correct.  What I think you are trying to accomplish is to have a field defined via passthu HTML and stored in the document, in which case you will need a hidden field with the same name on the form.&lt;/p&gt;&lt;p&gt;Sean---&lt;/p&gt;]]></description>
			<content:encoded><![CDATA[<p>How can you have 2 fields on the same form with the exact same name?  Notes is not going to allow that even is one of the fields is a Computed for Display field.  The only way I can think of it occuring is if they are on 2 different subforms.  In that case, the behaviour you observed is absolutely correct.  What I think you are trying to accomplish is to have a field defined via passthu HTML and stored in the document, in which case you will need a hidden field with the same name on the form.</p>
<p>Sean&#8212;</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
