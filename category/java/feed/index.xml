<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Java &#8211; mattwhite.me</title>
	<atom:link href="/category/java/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Fri, 26 Aug 2022 15:27:26 +0000</lastBuildDate>
	<language>en-GB</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.1</generator>
	<item>
		<title>Useful new preference in DDE 8.5.2 for Java Agents</title>
		<link>/2010-10-26-useful-new-preference-in-dde-852-for-java-agents-html/</link>
					<comments>/2010-10-26-useful-new-preference-in-dde-852-for-java-agents-html/#comments</comments>
		
		<dc:creator><![CDATA[mattwhite]]></dc:creator>
		<pubDate>Tue, 26 Oct 2010 09:39:19 +0000</pubDate>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Notes and Domino]]></category>
		<category><![CDATA[8.5.2]]></category>
		<category><![CDATA[agents]]></category>
		<category><![CDATA[dde]]></category>
		<guid isPermaLink="false">/2010-10-26-useful-new-preference-in-dde-852-for-java-agents-html/</guid>

					<description><![CDATA[Having the proper Eclipse Java editor instead of the old style editor was introduced in 8.5.1, but there was one huge annoyance. When you edited a&#46;&#46;&#46;]]></description>
										<content:encoded><![CDATA[<p>Having the proper Eclipse Java editor instead of the old style editor was introduced in 8.5.1, but there was one huge annoyance. When you edited a Java file, you had to save that, but then also remember to save the agent as well. Cue plenty of swearing and head scratching when your change wasn&#8217;t showing up.</p>
<p>Well in 8.5.2 there is a new preference setting which allows the agent to be automatically saved when you save the Java file:</p>
<p><span class="full-image-block ssNonEditable"><span><img src="/static/500fb502e4b0b0a178712c5d/500fb669e4b00f3716e9af9d/500fb669e4b00f3716e9b012/1288086099167/1000w" alt="" /></span></span></p>
<p>Just check the &#8220;Autosave Java design element on save of individual Java sources&#8221; box to make your Java coding a lot less annoying.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2010-10-26-useful-new-preference-in-dde-852-for-java-agents-html/feed/</wfw:commentRss>
			<slash:comments>7</slash:comments>
		
		
			</item>
		<item>
		<title>Java Lesson for the Day</title>
		<link>/2008-4-10-java-lesson-for-the-day-html/</link>
					<comments>/2008-4-10-java-lesson-for-the-day-html/#respond</comments>
		
		<dc:creator><![CDATA[mattwhite]]></dc:creator>
		<pubDate>Thu, 10 Apr 2008 16:29:25 +0000</pubDate>
				<category><![CDATA[Java]]></category>
		<guid isPermaLink="false">/2008-4-10-java-lesson-for-the-day-html/</guid>

					<description><![CDATA[I am not sure how this bug got through our first round of testing but I have some code which looks like this&#8230; String source =&#46;&#46;&#46;]]></description>
										<content:encoded><![CDATA[<p>I am not sure how this bug got through our first round of testing but I have some code which looks like this&#8230;</p>
<blockquote><p>
String source = &#8220;The BNL&#8221;;<br />
String pattern = &#8220;If I had $1000000&#8221;;<br />
System.out.println(source.replaceAll(source, pattern));
</p></blockquote>
<p>
I was getting an error of &#8220;java.lang.IndexOutOfBoundsException: No group 1&#8221;. The astute amongst you will notice that this will never work as $ is a heavily used regex character. So what to do, either I could manually escape the pattern string, but that gets us into a whole hellish world of backslashes. So instead enter a static method that I hadn&#8217;t tried before&#8230; Matcher.quoteReplacement().</p>
<p>What it does is escape the pattern string for me before then being used in the replaceAll process. So my fixed code looks like this:</p>
<blockquote><p>
String source = &#8220;The BNL&#8221;;<br />
String pattern = &#8220;If I had $1000000&#8221;;<br />
System.out.println(source.replaceAll(source, Matcher.quoteReplacement(pattern)));
</p></blockquote>
<p>
Not a big thing but it had me scratching my head for a while this afternoon, so thought I&#8217;d write it down for future reference.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2008-4-10-java-lesson-for-the-day-html/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
